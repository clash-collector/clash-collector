{"mappings":"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","sources":["node_modules/@ledgerhq/hw-transport-webhid/src/TransportWebHID.ts","node_modules/@ledgerhq/hw-transport-webhid/node_modules/@ledgerhq/hw-transport/src/Transport.ts","node_modules/@ledgerhq/devices/src/hid-framing.ts","node_modules/@ledgerhq/devices/src/index.ts","node_modules/@ledgerhq/devices/node_modules/semver/index.js","node_modules/@ledgerhq/devices/node_modules/semver/internal/re.js","node_modules/@ledgerhq/devices/node_modules/semver/internal/constants.js","node_modules/@ledgerhq/devices/node_modules/semver/internal/debug.js","node_modules/@ledgerhq/devices/node_modules/semver/classes/semver.js","node_modules/@ledgerhq/devices/node_modules/semver/internal/parse-options.js","node_modules/@ledgerhq/devices/node_modules/semver/internal/identifiers.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/parse.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/valid.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/clean.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/inc.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/diff.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/eq.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/compare.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/major.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/minor.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/patch.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/prerelease.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/rcompare.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/compare-loose.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/compare-build.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/sort.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/rsort.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/gt.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/lt.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/neq.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/gte.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/lte.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/cmp.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/coerce.js","node_modules/@ledgerhq/devices/node_modules/semver/classes/comparator.js","node_modules/@ledgerhq/devices/node_modules/semver/classes/range.js","node_modules/lru-cache/index.js","node_modules/yallist/yallist.js","node_modules/yallist/iterator.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/satisfies.js","node_modules/@ledgerhq/devices/node_modules/semver/ranges/to-comparators.js","node_modules/@ledgerhq/devices/node_modules/semver/ranges/max-satisfying.js","node_modules/@ledgerhq/devices/node_modules/semver/ranges/min-satisfying.js","node_modules/@ledgerhq/devices/node_modules/semver/ranges/min-version.js","node_modules/@ledgerhq/devices/node_modules/semver/ranges/valid.js","node_modules/@ledgerhq/devices/node_modules/semver/ranges/outside.js","node_modules/@ledgerhq/devices/node_modules/semver/ranges/gtr.js","node_modules/@ledgerhq/devices/node_modules/semver/ranges/ltr.js","node_modules/@ledgerhq/devices/node_modules/semver/ranges/intersects.js","node_modules/@ledgerhq/devices/node_modules/semver/ranges/simplify.js","node_modules/@ledgerhq/devices/node_modules/semver/ranges/subset.js","node_modules/@ledgerhq/logs/src/index.ts"],"sourcesContent":["import Transport from \"@ledgerhq/hw-transport\";\nimport type {\n  Observer,\n  DescriptorEvent,\n  Subscription,\n} from \"@ledgerhq/hw-transport\";\nimport hidFraming from \"@ledgerhq/devices/lib/hid-framing\";\nimport { identifyUSBProductId, ledgerUSBVendorId } from \"@ledgerhq/devices\";\nimport type { DeviceModel } from \"@ledgerhq/devices\";\nimport { log } from \"@ledgerhq/logs\";\nimport {\n  TransportOpenUserCancelled,\n  DisconnectedDeviceDuringOperation,\n  DisconnectedDevice,\n  TransportError,\n} from \"@ledgerhq/errors\";\n\nconst ledgerDevices = [\n  {\n    vendorId: ledgerUSBVendorId,\n  },\n];\n\nconst isSupported = () =>\n  Promise.resolve(!!(window.navigator && window.navigator.hid));\n\nconst getHID = (): HID => {\n  // $FlowFixMe\n  const { hid } = navigator;\n  if (!hid)\n    throw new TransportError(\n      \"navigator.hid is not supported\",\n      \"HIDNotSupported\"\n    );\n  return hid;\n};\n\nasync function requestLedgerDevices(): Promise<HIDDevice[]> {\n  const device = await getHID().requestDevice({\n    filters: ledgerDevices,\n  });\n  if (Array.isArray(device)) return device;\n  return [device];\n}\n\nasync function getLedgerDevices(): Promise<HIDDevice[]> {\n  const devices = await getHID().getDevices();\n  return devices.filter((d) => d.vendorId === ledgerUSBVendorId);\n}\n\nasync function getFirstLedgerDevice(): Promise<HIDDevice> {\n  const existingDevices = await getLedgerDevices();\n  if (existingDevices.length > 0) return existingDevices[0];\n  const devices = await requestLedgerDevices();\n  return devices[0];\n}\n/**\n * WebHID Transport implementation\n * @example\n * import TransportWebHID from \"@ledgerhq/hw-transport-webhid\";\n * ...\n * TransportWebHID.create().then(transport => ...)\n */\n\nexport default class TransportWebHID extends Transport {\n  device: HIDDevice;\n  deviceModel: DeviceModel | null | undefined;\n  channel = Math.floor(Math.random() * 0xffff);\n  packetSize = 64;\n\n  constructor(device: HIDDevice) {\n    super();\n    this.device = device;\n    this.deviceModel =\n      typeof device.productId === \"number\"\n        ? identifyUSBProductId(device.productId)\n        : undefined;\n    device.addEventListener(\"inputreport\", this.onInputReport);\n  }\n\n  inputs: Buffer[] = [];\n  inputCallback: ((arg0: Buffer) => void) | null | undefined;\n  read = (): Promise<Buffer> => {\n    if (this.inputs.length) {\n      return Promise.resolve((this.inputs.shift() as unknown) as Buffer);\n    }\n\n    return new Promise((success) => {\n      this.inputCallback = success;\n    });\n  };\n  onInputReport = (e: HIDInputReportEvent) => {\n    const buffer = Buffer.from(e.data.buffer);\n\n    if (this.inputCallback) {\n      this.inputCallback(buffer);\n      this.inputCallback = null;\n    } else {\n      this.inputs.push(buffer);\n    }\n  };\n\n  /**\n   * Check if WebUSB transport is supported.\n   */\n  static isSupported = isSupported;\n\n  /**\n   * List the WebUSB devices that was previously authorized by the user.\n   */\n  static list = getLedgerDevices;\n\n  /**\n   * Actively listen to WebUSB devices and emit ONE device\n   * that was either accepted before, if not it will trigger the native permission UI.\n   *\n   * Important: it must be called in the context of a UI click!\n   */\n  static listen = (\n    observer: Observer<DescriptorEvent<HIDDevice>>\n  ): Subscription => {\n    let unsubscribed = false;\n    getFirstLedgerDevice().then(\n      (device) => {\n        if (!device) {\n          observer.error(\n            new TransportOpenUserCancelled(\"Access denied to use Ledger device\")\n          );\n        } else if (!unsubscribed) {\n          const deviceModel =\n            typeof device.productId === \"number\"\n              ? identifyUSBProductId(device.productId)\n              : undefined;\n          observer.next({\n            type: \"add\",\n            descriptor: device,\n            deviceModel,\n          });\n          observer.complete();\n        }\n      },\n      (error) => {\n        observer.error(new TransportOpenUserCancelled(error.message));\n      }\n    );\n\n    function unsubscribe() {\n      unsubscribed = true;\n    }\n\n    return {\n      unsubscribe,\n    };\n  };\n\n  /**\n   * Similar to create() except it will always display the device permission (even if some devices are already accepted).\n   */\n  static async request() {\n    const [device] = await requestLedgerDevices();\n    return TransportWebHID.open(device);\n  }\n\n  /**\n   * Similar to create() except it will never display the device permission (it returns a Promise<?Transport>, null if it fails to find a device).\n   */\n  static async openConnected() {\n    const devices = await getLedgerDevices();\n    if (devices.length === 0) return null;\n    return TransportWebHID.open(devices[0]);\n  }\n\n  /**\n   * Create a Ledger transport with a HIDDevice\n   */\n  static async open(device: HIDDevice) {\n    await device.open();\n    const transport = new TransportWebHID(device);\n\n    const onDisconnect = (e) => {\n      if (device === e.device) {\n        getHID().removeEventListener(\"disconnect\", onDisconnect);\n\n        transport._emitDisconnect(new DisconnectedDevice());\n      }\n    };\n\n    getHID().addEventListener(\"disconnect\", onDisconnect);\n    return transport;\n  }\n\n  _disconnectEmitted = false;\n  _emitDisconnect = (e: Error) => {\n    if (this._disconnectEmitted) return;\n    this._disconnectEmitted = true;\n    this.emit(\"disconnect\", e);\n  };\n\n  /**\n   * Release the transport device\n   */\n  async close(): Promise<void> {\n    await this.exchangeBusyPromise;\n    this.device.removeEventListener(\"inputreport\", this.onInputReport);\n    await this.device.close();\n  }\n\n  /**\n   * Exchange with the device using APDU protocol.\n   * @param apdu\n   * @returns a promise of apdu response\n   */\n  exchange = async (apdu: Buffer): Promise<Buffer> => {\n    const b = await this.exchangeAtomicImpl(async () => {\n      const { channel, packetSize } = this;\n      log(\"apdu\", \"=> \" + apdu.toString(\"hex\"));\n      const framing = hidFraming(channel, packetSize);\n      // Write...\n      const blocks = framing.makeBlocks(apdu);\n\n      for (let i = 0; i < blocks.length; i++) {\n        await this.device.sendReport(0, blocks[i]);\n      }\n\n      // Read...\n      let result;\n      let acc;\n\n      while (!(result = framing.getReducedResult(acc))) {\n        const buffer = await this.read();\n        acc = framing.reduceResponse(acc, buffer);\n      }\n\n      log(\"apdu\", \"<= \" + result.toString(\"hex\"));\n      return result;\n    }).catch((e) => {\n      if (e && e.message && e.message.includes(\"write\")) {\n        this._emitDisconnect(e);\n\n        throw new DisconnectedDeviceDuringOperation(e.message);\n      }\n\n      throw e;\n    });\n    return b as Buffer;\n  };\n\n  setScrambleKey() {}\n}\n","import EventEmitter from \"events\";\nimport type { DeviceModel } from \"@ledgerhq/devices\";\nimport {\n  TransportRaceCondition,\n  TransportError,\n  StatusCodes,\n  getAltStatusMessage,\n  TransportStatusError,\n} from \"@ledgerhq/errors\";\nexport {\n  TransportError,\n  TransportStatusError,\n  StatusCodes,\n  getAltStatusMessage,\n};\n\n/**\n */\nexport type Subscription = {\n  unsubscribe: () => void;\n};\n\n/**\n */\nexport type Device = any; // Should be a union type of all possible Device object's shape\n\n/**\n * type: add or remove event\n * descriptor: a parameter that can be passed to open(descriptor)\n * deviceModel: device info on the model (is it a nano s, nano x, ...)\n * device: transport specific device info\n */\nexport interface DescriptorEvent<Descriptor> {\n  type: \"add\" | \"remove\";\n  descriptor: Descriptor;\n  deviceModel?: DeviceModel | null | undefined;\n  device?: Device;\n}\n\n/**\n */\nexport type Observer<Ev> = Readonly<{\n  next: (event: Ev) => unknown;\n  error: (e: any) => unknown;\n  complete: () => unknown;\n}>;\n/**\n * Transport defines the generic interface to share between node/u2f impl\n * A **Descriptor** is a parametric type that is up to be determined for the implementation.\n * it can be for instance an ID, an file path, a URL,...\n */\n\nexport default class Transport {\n  exchangeTimeout = 30000;\n  unresponsiveTimeout = 15000;\n  deviceModel: DeviceModel | null | undefined = null;\n\n  /**\n   * Statically check if a transport is supported on the user's platform/browser.\n   */\n  static readonly isSupported: () => Promise<boolean>;\n\n  /**\n   * List once all available descriptors. For a better granularity, checkout `listen()`.\n   * @return a promise of descriptors\n   * @example\n   * TransportFoo.list().then(descriptors => ...)\n   */\n  static readonly list: () => Promise<Array<any>>;\n\n  /**\n   * Listen all device events for a given Transport. The method takes an Obverver of DescriptorEvent and returns a Subscription (according to Observable paradigm https://github.com/tc39/proposal-observable )\n   * a DescriptorEvent is a `{ descriptor, type }` object. type can be `\"add\"` or `\"remove\"` and descriptor is a value you can pass to `open(descriptor)`.\n   * each listen() call will first emit all potential device already connected and then will emit events can come over times,\n   * for instance if you plug a USB device after listen() or a bluetooth device become discoverable.\n   * @param observer is an object with a next, error and complete function (compatible with observer pattern)\n   * @return a Subscription object on which you can `.unsubscribe()` to stop listening descriptors.\n   * @example\n  const sub = TransportFoo.listen({\n  next: e => {\n    if (e.type===\"add\") {\n      sub.unsubscribe();\n      const transport = await TransportFoo.open(e.descriptor);\n      ...\n    }\n  },\n  error: error => {},\n  complete: () => {}\n  })\n   */\n  static readonly listen: (\n    observer: Observer<DescriptorEvent<any>>\n  ) => Subscription;\n\n  /**\n   * attempt to create a Transport instance with potentially a descriptor.\n   * @param descriptor: the descriptor to open the transport with.\n   * @param timeout: an optional timeout\n   * @return a Promise of Transport instance\n   * @example\n  TransportFoo.open(descriptor).then(transport => ...)\n   */\n  static readonly open: (\n    descriptor?: any,\n    timeout?: number\n  ) => Promise<Transport>;\n\n  /**\n   * low level api to communicate with the device\n   * This method is for implementations to implement but should not be directly called.\n   * Instead, the recommanded way is to use send() method\n   * @param apdu the data to send\n   * @return a Promise of response data\n   */\n  exchange(_apdu: Buffer): Promise<Buffer> {\n    throw new Error(\"exchange not implemented\");\n  }\n\n  /**\n   * set the \"scramble key\" for the next exchanges with the device.\n   * Each App can have a different scramble key and they internally will set it at instanciation.\n   * @param key the scramble key\n   */\n  setScrambleKey(_key: string) {}\n\n  /**\n   * close the exchange with the device.\n   * @return a Promise that ends when the transport is closed.\n   */\n  close(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  _events = new EventEmitter();\n\n  /**\n   * Listen to an event on an instance of transport.\n   * Transport implementation can have specific events. Here is the common events:\n   * * `\"disconnect\"` : triggered if Transport is disconnected\n   */\n  on(eventName: string, cb: (...args: Array<any>) => any): void {\n    this._events.on(eventName, cb);\n  }\n\n  /**\n   * Stop listening to an event on an instance of transport.\n   */\n  off(eventName: string, cb: (...args: Array<any>) => any): void {\n    this._events.removeListener(eventName, cb);\n  }\n\n  emit(event: string, ...args: any): void {\n    this._events.emit(event, ...args);\n  }\n\n  /**\n   * Enable or not logs of the binary exchange\n   */\n  setDebugMode() {\n    console.warn(\n      \"setDebugMode is deprecated. use @ledgerhq/logs instead. No logs are emitted in this anymore.\"\n    );\n  }\n\n  /**\n   * Set a timeout (in milliseconds) for the exchange call. Only some transport might implement it. (e.g. U2F)\n   */\n  setExchangeTimeout(exchangeTimeout: number): void {\n    this.exchangeTimeout = exchangeTimeout;\n  }\n\n  /**\n   * Define the delay before emitting \"unresponsive\" on an exchange that does not respond\n   */\n  setExchangeUnresponsiveTimeout(unresponsiveTimeout: number): void {\n    this.unresponsiveTimeout = unresponsiveTimeout;\n  }\n\n  /**\n   * wrapper on top of exchange to simplify work of the implementation.\n   * @param cla\n   * @param ins\n   * @param p1\n   * @param p2\n   * @param data\n   * @param statusList is a list of accepted status code (shorts). [0x9000] by default\n   * @return a Promise of response buffer\n   */\n  send = async (\n    cla: number,\n    ins: number,\n    p1: number,\n    p2: number,\n    data: Buffer = Buffer.alloc(0),\n    statusList: Array<number> = [StatusCodes.OK]\n  ): Promise<Buffer> => {\n    if (data.length >= 256) {\n      throw new TransportError(\n        \"data.length exceed 256 bytes limit. Got: \" + data.length,\n        \"DataLengthTooBig\"\n      );\n    }\n\n    const response = await this.exchange(\n      Buffer.concat([\n        Buffer.from([cla, ins, p1, p2]),\n        Buffer.from([data.length]),\n        data,\n      ])\n    );\n    const sw = response.readUInt16BE(response.length - 2);\n\n    if (!statusList.some((s) => s === sw)) {\n      throw new TransportStatusError(sw);\n    }\n\n    return response;\n  };\n\n  /**\n   * create() allows to open the first descriptor available or\n   * throw if there is none or if timeout is reached.\n   * This is a light helper, alternative to using listen() and open() (that you may need for any more advanced usecase)\n   * @example\n  TransportFoo.create().then(transport => ...)\n   */\n  static create(\n    openTimeout = 3000,\n    listenTimeout?: number\n  ): Promise<Transport> {\n    return new Promise((resolve, reject) => {\n      let found = false;\n      const sub = this.listen({\n        next: (e) => {\n          found = true;\n          if (sub) sub.unsubscribe();\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n          this.open(e.descriptor, openTimeout).then(resolve, reject);\n        },\n        error: (e) => {\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n          reject(e);\n        },\n        complete: () => {\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n\n          if (!found) {\n            reject(\n              new TransportError(\n                this.ErrorMessage_NoDeviceFound,\n                \"NoDeviceFound\"\n              )\n            );\n          }\n        },\n      });\n      const listenTimeoutId = listenTimeout\n        ? setTimeout(() => {\n            sub.unsubscribe();\n            reject(\n              new TransportError(\n                this.ErrorMessage_ListenTimeout,\n                \"ListenTimeout\"\n              )\n            );\n          }, listenTimeout)\n        : null;\n    });\n  }\n\n  exchangeBusyPromise: Promise<void> | null | undefined;\n  exchangeAtomicImpl = async (\n    f: () => Promise<Buffer | void>\n  ): Promise<Buffer | void> => {\n    if (this.exchangeBusyPromise) {\n      throw new TransportRaceCondition(\n        \"An action was already pending on the Ledger device. Please deny or reconnect.\"\n      );\n    }\n\n    let resolveBusy;\n    const busyPromise: Promise<void> = new Promise((r) => {\n      resolveBusy = r;\n    });\n    this.exchangeBusyPromise = busyPromise;\n    let unresponsiveReached = false;\n    const timeout = setTimeout(() => {\n      unresponsiveReached = true;\n      this.emit(\"unresponsive\");\n    }, this.unresponsiveTimeout);\n\n    try {\n      const res = await f();\n\n      if (unresponsiveReached) {\n        this.emit(\"responsive\");\n      }\n\n      return res;\n    } finally {\n      clearTimeout(timeout);\n      if (resolveBusy) resolveBusy();\n      this.exchangeBusyPromise = null;\n    }\n  };\n\n  decorateAppAPIMethods(\n    self: Record<string, any>,\n    methods: Array<string>,\n    scrambleKey: string\n  ) {\n    for (const methodName of methods) {\n      self[methodName] = this.decorateAppAPIMethod(\n        methodName,\n        self[methodName],\n        self,\n        scrambleKey\n      );\n    }\n  }\n\n  _appAPIlock: string | null = null;\n\n  decorateAppAPIMethod<R, A extends any[]>(\n    methodName: string,\n    f: (...args: A) => Promise<R>,\n    ctx: any,\n    scrambleKey: string\n  ): (...args: A) => Promise<R> {\n    return async (...args) => {\n      const { _appAPIlock } = this;\n\n      if (_appAPIlock) {\n        return Promise.reject(\n          new TransportError(\n            \"Ledger Device is busy (lock \" + _appAPIlock + \")\",\n            \"TransportLocked\"\n          )\n        );\n      }\n\n      try {\n        this._appAPIlock = methodName;\n        this.setScrambleKey(scrambleKey);\n        return await f.apply(ctx, args);\n      } finally {\n        this._appAPIlock = null;\n      }\n    };\n  }\n\n  static ErrorMessage_ListenTimeout = \"No Ledger device found (timeout)\";\n  static ErrorMessage_NoDeviceFound = \"No Ledger device found\";\n}\n","import { TransportError } from \"@ledgerhq/errors\";\nexport type ResponseAcc =\n  | {\n      data: Buffer;\n      dataLength: number;\n      sequence: number;\n    }\n  | null\n  | undefined;\nconst Tag = 0x05;\n\nfunction asUInt16BE(value) {\n  const b = Buffer.alloc(2);\n  b.writeUInt16BE(value, 0);\n  return b;\n}\n\nconst initialAcc = {\n  data: Buffer.alloc(0),\n  dataLength: 0,\n  sequence: 0,\n};\n\n/**\n *\n */\nconst createHIDframing = (channel: number, packetSize: number) => {\n  return {\n    makeBlocks(apdu: Buffer): Buffer[] {\n      let data = Buffer.concat([asUInt16BE(apdu.length), apdu]);\n      const blockSize = packetSize - 5;\n      const nbBlocks = Math.ceil(data.length / blockSize);\n      data = Buffer.concat([\n        data, // fill data with padding\n        Buffer.alloc(nbBlocks * blockSize - data.length + 1).fill(0),\n      ]);\n      const blocks: Buffer[] = [];\n\n      for (let i = 0; i < nbBlocks; i++) {\n        const head = Buffer.alloc(5);\n        head.writeUInt16BE(channel, 0);\n        head.writeUInt8(Tag, 2);\n        head.writeUInt16BE(i, 3);\n        const chunk = data.slice(i * blockSize, (i + 1) * blockSize);\n        blocks.push(Buffer.concat([head, chunk]));\n      }\n\n      return blocks;\n    },\n\n    reduceResponse(acc: ResponseAcc, chunk: Buffer): ResponseAcc {\n      let { data, dataLength, sequence } = acc || initialAcc;\n\n      if (chunk.readUInt16BE(0) !== channel) {\n        throw new TransportError(\"Invalid channel\", \"InvalidChannel\");\n      }\n\n      if (chunk.readUInt8(2) !== Tag) {\n        throw new TransportError(\"Invalid tag\", \"InvalidTag\");\n      }\n\n      if (chunk.readUInt16BE(3) !== sequence) {\n        throw new TransportError(\"Invalid sequence\", \"InvalidSequence\");\n      }\n\n      if (!acc) {\n        dataLength = chunk.readUInt16BE(5);\n      }\n\n      sequence++;\n      const chunkData = chunk.slice(acc ? 5 : 7);\n      data = Buffer.concat([data, chunkData]);\n\n      if (data.length > dataLength) {\n        data = data.slice(0, dataLength);\n      }\n\n      return {\n        data,\n        dataLength,\n        sequence,\n      };\n    },\n\n    getReducedResult(acc: ResponseAcc): Buffer | null | undefined {\n      if (acc && acc.dataLength === acc.data.length) {\n        return acc.data;\n      }\n    },\n  };\n};\n\nexport default createHIDframing;\n","import semver from \"semver\";\n\n/**\n * The USB product IDs will be defined as MMII, encoding a model (MM) and an interface bitfield (II)\n *\n ** Model\n * Ledger Nano S : 0x10\n * Ledger Blue : 0x00\n * Ledger Nano X : 0x40\n *\n ** Interface support bitfield\n * Generic HID : 0x01\n * Keyboard HID : 0x02\n * U2F : 0x04\n * CCID : 0x08\n * WebUSB : 0x10\n */\nexport const IIGenericHID = 0x01;\nexport const IIKeyboardHID = 0x02;\nexport const IIU2F = 0x04;\nexport const IICCID = 0x08;\nexport const IIWebUSB = 0x10;\n\nexport enum DeviceModelId {\n  blue = \"blue\",\n  nanoS = \"nanoS\",\n  nanoSP = \"nanoSP\",\n  nanoX = \"nanoX\",\n  nanoFTS = \"nanoFTS\",\n}\n\nconst devices: { [key in DeviceModelId]: DeviceModel } = {\n  [DeviceModelId.blue]: {\n    id: DeviceModelId.blue,\n    productName: \"Ledger Blue\",\n    productIdMM: 0x00,\n    legacyUsbProductId: 0x0000,\n    usbOnly: true,\n    memorySize: 480 * 1024,\n    masks: [0x31000000, 0x31010000],\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n  },\n  [DeviceModelId.nanoS]: {\n    id: DeviceModelId.nanoS,\n    productName: \"Ledger Nano S\",\n    productIdMM: 0x10,\n    legacyUsbProductId: 0x0001,\n    usbOnly: true,\n    memorySize: 320 * 1024,\n    masks: [0x31100000],\n    getBlockSize: (firmwareVersion: string): number =>\n      semver.lt(semver.coerce(firmwareVersion) ?? \"\", \"2.0.0\")\n        ? 4 * 1024\n        : 2 * 1024,\n  },\n  [DeviceModelId.nanoSP]: {\n    id: DeviceModelId.nanoSP,\n    productName: \"Ledger Nano S Plus\",\n    productIdMM: 0x50,\n    legacyUsbProductId: 0x0005,\n    usbOnly: true,\n    memorySize: 1536 * 1024,\n    masks: [0x33100000],\n    getBlockSize: (_firmwareVersion: string): number => 32,\n  },\n  [DeviceModelId.nanoX]: {\n    id: DeviceModelId.nanoX,\n    productName: \"Ledger Nano X\",\n    productIdMM: 0x40,\n    legacyUsbProductId: 0x0004,\n    usbOnly: false,\n    memorySize: 2 * 1024 * 1024,\n    masks: [0x33000000],\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n    bluetoothSpec: [\n      {\n        serviceUuid: \"13d63400-2c97-0004-0000-4c6564676572\",\n        notifyUuid: \"13d63400-2c97-0004-0001-4c6564676572\",\n        writeUuid: \"13d63400-2c97-0004-0002-4c6564676572\",\n        writeCmdUuid: \"13d63400-2c97-0004-0003-4c6564676572\",\n      },\n    ],\n  },\n  [DeviceModelId.nanoFTS]: {\n    id: DeviceModelId.nanoFTS,\n    productName: \"Ledger Nano FTS\",\n    productIdMM: 0x60,\n    legacyUsbProductId: 0x0006,\n    usbOnly: false,\n    memorySize: 2 * 1024 * 1024, // ← ↓ TODO Update with actual values\n    masks: [0x33200000],\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n    bluetoothSpec: [\n      {\n        serviceUuid: \"13d63400-2c97-6004-0000-4c6564676572\",\n        notifyUuid: \"13d63400-2c97-6004-0001-4c6564676572\",\n        writeUuid: \"13d63400-2c97-6004-0002-4c6564676572\",\n        writeCmdUuid: \"13d63400-2c97-6004-0003-4c6564676572\",\n      },\n    ],\n  },\n};\n\nconst productMap = {\n  Blue: DeviceModelId.blue,\n  \"Nano S\": DeviceModelId.nanoS,\n  \"Nano S Plus\": DeviceModelId.nanoSP,\n  \"Nano X\": DeviceModelId.nanoX,\n  \"Nano FTS\": DeviceModelId.nanoFTS,\n};\n\nconst devicesList: DeviceModel[] = Object.values(devices);\n\n/**\n *\n */\nexport const ledgerUSBVendorId = 0x2c97;\n\n/**\n *\n */\nexport const getDeviceModel = (id: DeviceModelId): DeviceModel => {\n  const info = devices[id];\n  if (!info) throw new Error(\"device '\" + id + \"' does not exist\");\n  return info;\n};\n\n/**\n * Given a `targetId`, return the deviceModel associated to it,\n * based on the first two bytes.\n */\nexport const identifyTargetId = (\n  targetId: number\n): DeviceModel | null | undefined => {\n  const deviceModel = devicesList.find(({ masks }) =>\n    masks.find((mask) => (targetId & 0xffff0000) === mask)\n  );\n\n  return deviceModel;\n};\n\n/**\n *\n */\nexport const identifyUSBProductId = (\n  usbProductId: number\n): DeviceModel | null | undefined => {\n  const legacy = devicesList.find((d) => d.legacyUsbProductId === usbProductId);\n  if (legacy) return legacy;\n  const mm = usbProductId >> 8;\n  const deviceModel = devicesList.find((d) => d.productIdMM === mm);\n  return deviceModel;\n};\n\nexport const identifyProductName = (\n  productName: string\n): DeviceModel | null | undefined => {\n  const deviceModel = devicesList.find((d) => d.id === productMap[productName]);\n  return deviceModel;\n};\n\nconst bluetoothServices: string[] = [];\nconst serviceUuidToInfos: Record<string, BluetoothInfos> = {};\n\nfor (const id in devices) {\n  const deviceModel = devices[id];\n  const { bluetoothSpec } = deviceModel;\n  if (bluetoothSpec) {\n    for (let i = 0; i < bluetoothSpec.length; i++) {\n      const spec = bluetoothSpec[i];\n      bluetoothServices.push(spec.serviceUuid);\n      serviceUuidToInfos[spec.serviceUuid] = serviceUuidToInfos[\n        spec.serviceUuid.replace(/-/g, \"\")\n      ] = {\n        deviceModel,\n        ...spec,\n      };\n    }\n  }\n}\n\n/**\n *\n */\nexport const getBluetoothServiceUuids = (): string[] => bluetoothServices;\n\n/**\n *\n */\nexport const getInfosForServiceUuid = (\n  uuid: string\n): BluetoothInfos | undefined => serviceUuidToInfos[uuid.toLowerCase()];\n\n/**\n *\n */\nexport interface DeviceModel {\n  id: DeviceModelId;\n  productName: string;\n  productIdMM: number;\n  legacyUsbProductId: number;\n  usbOnly: boolean;\n  memorySize: number;\n  masks: number[];\n  // blockSize: number, // THIS FIELD IS DEPRECATED, use getBlockSize\n  getBlockSize: (firmwareVersion: string) => number;\n  bluetoothSpec?: {\n    serviceUuid: string;\n    writeUuid: string;\n    writeCmdUuid: string;\n    notifyUuid: string;\n  }[];\n}\n\n/**\n *\n */\nexport interface BluetoothInfos {\n  deviceModel: DeviceModel;\n  serviceUuid: string;\n  writeUuid: string;\n  writeCmdUuid: string;\n  notifyUuid: string;\n}\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nmodule.exports = {\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: require('./internal/constants').SEMVER_SPEC_VERSION,\n  SemVer: require('./classes/semver'),\n  compareIdentifiers: require('./internal/identifiers').compareIdentifiers,\n  rcompareIdentifiers: require('./internal/identifiers').rcompareIdentifiers,\n  parse: require('./functions/parse'),\n  valid: require('./functions/valid'),\n  clean: require('./functions/clean'),\n  inc: require('./functions/inc'),\n  diff: require('./functions/diff'),\n  major: require('./functions/major'),\n  minor: require('./functions/minor'),\n  patch: require('./functions/patch'),\n  prerelease: require('./functions/prerelease'),\n  compare: require('./functions/compare'),\n  rcompare: require('./functions/rcompare'),\n  compareLoose: require('./functions/compare-loose'),\n  compareBuild: require('./functions/compare-build'),\n  sort: require('./functions/sort'),\n  rsort: require('./functions/rsort'),\n  gt: require('./functions/gt'),\n  lt: require('./functions/lt'),\n  eq: require('./functions/eq'),\n  neq: require('./functions/neq'),\n  gte: require('./functions/gte'),\n  lte: require('./functions/lte'),\n  cmp: require('./functions/cmp'),\n  coerce: require('./functions/coerce'),\n  Comparator: require('./classes/comparator'),\n  Range: require('./classes/range'),\n  satisfies: require('./functions/satisfies'),\n  toComparators: require('./ranges/to-comparators'),\n  maxSatisfying: require('./ranges/max-satisfying'),\n  minSatisfying: require('./ranges/min-satisfying'),\n  minVersion: require('./ranges/min-version'),\n  validRange: require('./ranges/valid'),\n  outside: require('./ranges/outside'),\n  gtr: require('./ranges/gtr'),\n  ltr: require('./ranges/ltr'),\n  intersects: require('./ranges/intersects'),\n  simplifyRange: require('./ranges/simplify'),\n  subset: require('./ranges/subset'),\n}\n","const { MAX_SAFE_COMPONENT_LENGTH } = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst createToken = (name, value, isGlobal) => {\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '[0-9]+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*')\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', '[0-9A-Za-z-]+')\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCE', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\nmodule.exports = {\n  SEMVER_SPEC_VERSION,\n  MAX_LENGTH,\n  MAX_SAFE_INTEGER,\n  MAX_SAFE_COMPONENT_LENGTH,\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier)\n        this.inc('pre', identifier)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier)\n        }\n        this.inc('pre', identifier)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre':\n        if (this.prerelease.length === 0) {\n          this.prerelease = [0]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            this.prerelease.push(0)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = [identifier, 0]\n            }\n          } else {\n            this.prerelease = [identifier, 0]\n          }\n        }\n        break\n\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.format()\n    this.raw = this.version\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","// parse out just the options we care about so we always get a consistent\n// obj with keys in a consistent order.\nconst opts = ['includePrerelease', 'loose', 'rtl']\nconst parseOptions = options =>\n  !options ? {}\n  : typeof options !== 'object' ? { loose: true }\n  : opts.filter(k => options[k]).reduce((o, k) => {\n    o[k] = true\n    return o\n  }, {})\nmodule.exports = parseOptions\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n","const { MAX_LENGTH } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\nconst SemVer = require('../classes/semver')\n\nconst parseOptions = require('../internal/parse-options')\nconst parse = (version, options) => {\n  options = parseOptions(options)\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  const r = options.loose ? re[t.LOOSE] : re[t.FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nmodule.exports = parse\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier) => {\n  if (typeof (options) === 'string') {\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const parse = require('./parse')\nconst eq = require('./eq')\n\nconst diff = (version1, version2) => {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    const v1 = parse(version1)\n    const v2 = parse(version2)\n    const hasPre = v1.prerelease.length || v2.prerelease.length\n    const prefix = hasPre ? 'pre' : ''\n    const defaultResult = hasPre ? 'prerelease' : ''\n    for (const key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\nmodule.exports = diff\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    let next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  return parse(`${match[2]}.${match[3] || '0'}.${match[4] || '0'}`, options)\n}\nmodule.exports = coerce\n","const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false,\n      }\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    const sameDirectionIncreasing =\n      (this.operator === '>=' || this.operator === '>') &&\n      (comp.operator === '>=' || comp.operator === '>')\n    const sameDirectionDecreasing =\n      (this.operator === '<=' || this.operator === '<') &&\n      (comp.operator === '<=' || comp.operator === '<')\n    const sameSemVer = this.semver.version === comp.semver.version\n    const differentDirectionsInclusive =\n      (this.operator === '>=' || this.operator === '<=') &&\n      (comp.operator === '>=' || comp.operator === '<=')\n    const oppositeDirectionsLessThan =\n      cmp(this.semver, '<', comp.semver, options) &&\n      (this.operator === '>=' || this.operator === '>') &&\n        (comp.operator === '<=' || comp.operator === '<')\n    const oppositeDirectionsGreaterThan =\n      cmp(this.semver, '>', comp.semver, options) &&\n      (this.operator === '<=' || this.operator === '<') &&\n        (comp.operator === '>=' || comp.operator === '>')\n\n    return (\n      sameDirectionIncreasing ||\n      sameDirectionDecreasing ||\n      (sameSemVer && differentDirectionsInclusive) ||\n      oppositeDirectionsLessThan ||\n      oppositeDirectionsGreaterThan\n    )\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First, split based on boolean or ||\n    this.raw = range\n    this.set = range\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${range}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => {\n        return comps.join(' ').trim()\n      })\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    range = range.trim()\n\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts = Object.keys(this.options).join(',')\n    const memoKey = `parseRange:${memoOpts}:${range}`\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n\n    // normalize spaces\n    range = range.split(/\\s+/).join(' ')\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\nmodule.exports = Range\n\nconst LRU = require('lru-cache')\nconst cache = new LRU({ max: 1000 })\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\nconst replaceTildes = (comp, options) =>\n  comp.trim().split(/\\s+/).map((c) => {\n    return replaceTilde(c, options)\n  }).join(' ')\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\nconst replaceCarets = (comp, options) =>\n  comp.trim().split(/\\s+/).map((c) => {\n    return replaceCaret(c, options)\n  }).join(' ')\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map((c) => {\n    return replaceXRange(c, options)\n  }).join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp.trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return (`${from} ${to}`).trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\nmodule.exports = intersects\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = [new Comparator('>=0.0.0-0')]\n    } else {\n      sub = [new Comparator('>=0.0.0')]\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = [new Comparator('>=0.0.0')]\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","/**\n * A Log object\n */\nexport interface Log {\n  type: string;\n  message?: string;\n  data?: any;\n  // unique amount all logs\n  id: string;\n  // date of the log\n  date: Date;\n}\nexport type Unsubscribe = () => void;\nexport type Subscriber = (arg0: Log) => void;\nlet id = 0;\nconst subscribers: Subscriber[] = [];\n\n/**\n * log something\n * @param type a namespaced identifier of the log (it is not a level like \"debug\", \"error\" but more like \"apdu-in\", \"apdu-out\", etc...)\n * @param message a clear message of the log associated to the type\n */\nexport const log = (type: string, message?: string, data?: any) => {\n  const obj: Log = {\n    type,\n    id: String(++id),\n    date: new Date(),\n  };\n  if (message) obj.message = message;\n  if (data) obj.data = data;\n  dispatch(obj);\n};\n\n/**\n * listen to logs.\n * @param cb that is called for each future log() with the Log object\n * @return a function that can be called to unsubscribe the listener\n */\nexport const listen = (cb: Subscriber): Unsubscribe => {\n  subscribers.push(cb);\n  return () => {\n    const i = subscribers.indexOf(cb);\n\n    if (i !== -1) {\n      // equivalent of subscribers.splice(i, 1) // https://twitter.com/Rich_Harris/status/1125850391155965952\n      subscribers[i] = subscribers[subscribers.length - 1];\n      subscribers.pop();\n    }\n  };\n};\n\nfunction dispatch(log: Log) {\n  for (let i = 0; i < subscribers.length; i++) {\n    try {\n      subscribers[i](log);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\n// for debug purpose\n\ndeclare global {\n  interface Window {\n    __ledgerLogsListen: any;\n  }\n}\n\nif (typeof window !== \"undefined\") {\n  window.__ledgerLogsListen = listen;\n}\n"],"names":["$b95dc6f85d7a5443$var$ledgerDevices","vendorId","$83X6F","ledgerUSBVendorId","$b95dc6f85d7a5443$var$isSupported","Promise","resolve","window","navigator","hid","$b95dc6f85d7a5443$var$getHID","$degpm","TransportError","$b95dc6f85d7a5443$var$requestLedgerDevices","requestDevice","filters","device","_a","sent","Array","isArray","$b95dc6f85d7a5443$var$getLedgerDevices","getDevices","filter","d","$b95dc6f85d7a5443$export$2e2bcd8739ae039","_super","TransportWebHID","_this","call","this","channel","Math","floor","random","packetSize","inputs","read","length","shift","success","inputCallback","onInputReport","e","buffer","$b95dc6f85d7a5443$require$Buffer","from","data","push","_disconnectEmitted","_emitDisconnect","emit","exchange","apdu","$b95dc6f85d7a5443$var$__awaiter","exchangeAtomicImpl","$lN7Vg","log","toString","framing","$efB1Y","default","blocks","makeBlocks","i","sendReport","_b","result","getReducedResult","acc","reduceResponse","message","includes","DisconnectedDeviceDuringOperation","deviceModel","productId","identifyUSBProductId","undefined","addEventListener","$b95dc6f85d7a5443$var$__extends","request","$b95dc6f85d7a5443$var$__read","apply","open","openConnected","devices","transport","onDisconnect","removeEventListener","DisconnectedDevice","prototype","close","exchangeBusyPromise","setScrambleKey","isSupported","list","listen","observer","unsubscribed","existingDevices","$b95dc6f85d7a5443$var$getFirstLedgerDevice","then","next","type","descriptor","complete","error","TransportOpenUserCancelled","unsubscribe","$6kOXc","$49cc22b37427292e$var$Transport","Transport","exchangeTimeout","unresponsiveTimeout","_events","$parcel$interopDefault","$7etJZ","send","cla","ins","p1","p2","statusList","$49cc22b37427292e$require$Buffer","alloc","StatusCodes","OK","concat","response","sw","readUInt16BE","some","s","TransportStatusError","f","$49cc22b37427292e$var$__awaiter","TransportRaceCondition","busyPromise","r","resolveBusy","unresponsiveReached","timeout","setTimeout","res","clearTimeout","_appAPIlock","_apdu","Error","_key","on","eventName","cb","off","removeListener","event","args","_i","arguments","$49cc22b37427292e$var$__spreadArray","$49cc22b37427292e$var$__read","setDebugMode","console","warn","setExchangeTimeout","setExchangeUnresponsiveTimeout","create","openTimeout","listenTimeout","reject","found","sub","listenTimeoutId","ErrorMessage_NoDeviceFound","ErrorMessage_ListenTimeout","decorateAppAPIMethods","self","methods","scrambleKey","methods_1","$49cc22b37427292e$var$__values","methods_1_1","done","methodName","value","decorateAppAPIMethod","ctx","$49cc22b37427292e$export$2e2bcd8739ae039","$a5ff30f0873f7620$export$2e2bcd8739ae039","$a5ff30f0873f7620$var$initialAcc","$a5ff30f0873f7620$require$Buffer","dataLength","sequence","b","writeUInt16BE","blockSize","nbBlocks","ceil","fill","head","writeUInt8","chunk","slice","readUInt8","chunkData","$5dec73da4f32e22b$export$b8d24b2c0d9c5549","DeviceModelId","$5dec73da4f32e22b$var$devices","$5dec73da4f32e22b$var$_a","blue","id","productName","productIdMM","legacyUsbProductId","usbOnly","memorySize","masks","getBlockSize","_firwareVersion","nanoS","firmwareVersion","$7b4DE","lt","coerce","nanoSP","_firmwareVersion","nanoX","bluetoothSpec","serviceUuid","notifyUuid","writeUuid","writeCmdUuid","nanoFTS","$5dec73da4f32e22b$var$devicesList","Object","values","$5dec73da4f32e22b$export$268c42a4ddec87f3","$5dec73da4f32e22b$export$df8f4444a7c73154","usbProductId","legacy","find","mm","$5dec73da4f32e22b$var$bluetoothServices","$5dec73da4f32e22b$var$serviceUuidToInfos","$5dec73da4f32e22b$var$id","$5dec73da4f32e22b$var$deviceModel","$5dec73da4f32e22b$var$bluetoothSpec","$5dec73da4f32e22b$var$i","$5dec73da4f32e22b$var$spec","replace","$5dec73da4f32e22b$var$__assign","$1Fo37","parcelRequire","module","exports","re","src","tokens","t","SEMVER_SPEC_VERSION","SemVer","compareIdentifiers","rcompareIdentifiers","parse","valid","clean","inc","diff","major","minor","patch","prerelease","compare","rcompare","compareLoose","compareBuild","sort","rsort","gt","eq","neq","gte","lte","cmp","Comparator","Range","satisfies","toComparators","maxSatisfying","minSatisfying","minVersion","validRange","outside","gtr","ltr","intersects","simplifyRange","subset","MAX_SAFE_COMPONENT_LENGTH","R","createToken","name","isGlobal","index","$gEWXU","RegExp","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","BUILDIDENTIFIER","MAINVERSION","PRERELEASE","BUILD","FULLPLAIN","MAINVERSIONLOOSE","PRERELEASELOOSE","LOOSEPLAIN","XRANGEIDENTIFIER","XRANGEIDENTIFIERLOOSE","GTLT","XRANGEPLAIN","XRANGEPLAINLOOSE","$136c467abd10119c$require$MAX_SAFE_COMPONENT_LENGTH","COERCE","LONETILDE","tildeTrimReplace","LONECARET","caretTrimReplace","comparatorTrimReplace","$e77d6af33018f99d$var$MAX_SAFE_INTEGER","Number","MAX_SAFE_INTEGER","$hPtJY","$c20e1f0bb1d4aa00$var$debug","env","$jSdlU","MAX_LENGTH","$1e4473f8e581e095$var$SemVer","constructor","version","options","$gh976","loose","includePrerelease","TypeError","$1e4473f8e581e095$require$MAX_LENGTH","m","trim","match","$1e4473f8e581e095$require$re","$1e4473f8e581e095$require$t","LOOSE","FULL","raw","$1e4473f8e581e095$require$MAX_SAFE_INTEGER","split","map","test","num","build","format","join","other","compareMain","comparePre","$1e4473f8e581e095$require$compareIdentifiers","a","release","identifier","isNaN","$bd954d9ecda20689$var$opts","k","reduce","o","$fd34b0b3a3ee3537$var$numeric","$fd34b0b3a3ee3537$var$compareIdentifiers","anum","bnum","$2B6YX","$ac50e3518c9e1cf2$require$MAX_LENGTH","$ac50e3518c9e1cf2$require$re","$ac50e3518c9e1cf2$require$t","er","$eNeuW","v","version1","version2","$eWBQR","v1","v2","hasPre","prefix","defaultResult","key","$5IWPb","parsed","versionA","versionB","$bi5Wq","op","$hs2CC","$2ujDC","$hfCMX","$8UdES","$bZn9y","String","rtl","$c04e66671d64d088$require$re","$c04e66671d64d088$require$t","COERCERTL","exec","lastIndex","$23c2aa77ee272450$var$ANY","Symbol","$23c2aa77ee272450$var$Comparator","ANY","comp","semver","operator","$23c2aa77ee272450$require$re","$23c2aa77ee272450$require$t","COMPARATORLOOSE","COMPARATOR","$l8Agr","$kRsez","sameDirectionIncreasing","sameDirectionDecreasing","sameSemVer","differentDirectionsInclusive","oppositeDirectionsLessThan","oppositeDirectionsGreaterThan","$f2fea88ed1a42bf2$var$Range","range","$34lOt","set","parseRange","c","first","$f2fea88ed1a42bf2$var$isNullSet","$f2fea88ed1a42bf2$var$isAny","comps","memoKey","keys","cached","$f2fea88ed1a42bf2$var$cache","get","hr","$f2fea88ed1a42bf2$require$re","$f2fea88ed1a42bf2$require$t","HYPHENRANGELOOSE","HYPHENRANGE","$f2fea88ed1a42bf2$var$hyphenReplace","COMPARATORTRIM","$f2fea88ed1a42bf2$require$comparatorTrimReplace","rangeList","TILDETRIM","$f2fea88ed1a42bf2$require$tildeTrimReplace","CARETTRIM","$f2fea88ed1a42bf2$require$caretTrimReplace","$f2fea88ed1a42bf2$var$parseComparator","$f2fea88ed1a42bf2$var$replaceGTE0","rangeMap","Map","comparators","size","has","delete","thisComparators","$f2fea88ed1a42bf2$var$isSatisfiable","rangeComparators","every","thisComparator","rangeComparator","$f2fea88ed1a42bf2$var$testSet","max","remainingComparators","testComparator","pop","otherComparator","$f2fea88ed1a42bf2$var$replaceCarets","$f2fea88ed1a42bf2$var$replaceTildes","$f2fea88ed1a42bf2$var$replaceXRanges","$f2fea88ed1a42bf2$var$replaceStars","$f2fea88ed1a42bf2$var$isX","toLowerCase","$f2fea88ed1a42bf2$var$replaceTilde","TILDELOOSE","TILDE","_","M","p","pr","ret","$f2fea88ed1a42bf2$var$replaceCaret","CARETLOOSE","CARET","z","$f2fea88ed1a42bf2$var$replaceXRange","XRANGELOOSE","XRANGE","gtlt","xM","xm","xp","anyX","STAR","GTE0PRE","GTE0","incPr","$0","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","tb","i1","allowed","$849cd0fb8cde656f$var$MAX","$849cd0fb8cde656f$var$LENGTH","$849cd0fb8cde656f$var$LENGTH_CALCULATOR","$849cd0fb8cde656f$var$ALLOW_STALE","$849cd0fb8cde656f$var$MAX_AGE","$849cd0fb8cde656f$var$DISPOSE","$849cd0fb8cde656f$var$NO_DISPOSE_ON_SET","$849cd0fb8cde656f$var$LRU_LIST","$849cd0fb8cde656f$var$CACHE","$849cd0fb8cde656f$var$UPDATE_AGE_ON_GET","$849cd0fb8cde656f$var$naiveLength","$849cd0fb8cde656f$var$get","doUse","node","hit","$849cd0fb8cde656f$var$isStale","$849cd0fb8cde656f$var$del","now","Date","unshiftNode","maxAge","$849cd0fb8cde656f$var$trim","walker","tail","prev","removeNode","$849cd0fb8cde656f$var$Entry","$849cd0fb8cde656f$var$forEachStep","fn","thisp","Infinity","lc","stale","dispose","noDisposeOnSet","updateAgeOnGet","reset","mL","allowStale","mA","lengthCalculator","lC","forEach","itemCount","rforEach","toArray","$5qBd4","dump","h","dumpLru","len","item","unshift","peek","del","load","arr","l","expiresAt","prune","$3f3c3e91d91e9f6c$var$Yallist","$3f3c3e91d91e9f6c$var$insert","inserted","$3f3c3e91d91e9f6c$var$Node","$3f3c3e91d91e9f6c$var$push","$3f3c3e91d91e9f6c$var$unshift","Node","pushNode","forEachReverse","n","getReverse","mapReverse","initial","reduceReverse","toArrayReverse","sliceReverse","splice","start","deleteCount","nodes","reverse","Yallist","iterator","versions","maxSV","rangeObj","min","minSV","minver","setMin","comparator","compver","$f3ff839f6a966182$var$ANY","hilo","gtfn","ltefn","ltfn","ecomp","$kHUG0","high","low","$kWNmu","r1","r2","ranges","simplified","original","$96131c64a2bc287a$var$ANY","$96131c64a2bc287a$var$simpleSubset","dom","eqSet","Set","gtltComp","higher","lower","hasDomLT","hasDomGT","$96131c64a2bc287a$var$higherGT","$96131c64a2bc287a$var$lowerLT","add","c1","needDomLTPre","needDomGTPre","c2","sawNonNull","OUTER","simpleSub","simpleDom","isSub","$fdd451dd43e0ce6f$var$id","$fdd451dd43e0ce6f$var$subscribers","$fdd451dd43e0ce6f$export$bef1f36f5486a6a3","obj","date","$fdd451dd43e0ce6f$var$dispatch","__ledgerLogsListen","indexOf"],"version":3,"file":"TransportWebHID.1fb077e3.js.map"}